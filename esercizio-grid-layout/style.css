
.container{
    display: grid;      /*rende il container una grid */
    grid-template-columns: 1fr 1fr 1fr;     /*definisco il numero e la grandezza delle colonne, se inserisco fr posso rendere la dimensione della colonna flessibile */
    gap: 10px;                                                      /*setta gli spazi(gatter) tra righe e colonne */
    /* grid-template-columns: repeat(3, minmax(200px, auto));   posso fare la stessa cosa così con repeat che me lo fa in automatico e auto e imposto anche i valori minimi della grandezza degli elementi se allargo o restringo la finestra */
    /* grid-template-rows: 200px 100px 500px;                   definisco la grandezza delle righe     */
    grid-auto-rows: auto;                                          /*se il mio contenuto eccede al dimensione che avevo scelto posso inserire 'auto' e verrà imostato in automatico rendendo tutto più flessibile e dinamico*/
    grid-template-rows: 50px 600px 200px;

    /* grid-template-columns: repeat(auto-fill, minmax(100px, auto));     mi permette di impostare o inserire un numero di colonne pari alla larghezza della pagina in modo automatico grazie ad auto-fill, imposto una larghezza minima della colonna oltre il quale se restringo ulteriormente la pagina mi mandera le colonne o gli elementi in una riga successiva */
/*l'ultima istruzion mi permette quindi di poter avere un numero variabile di colonne e quindi di elementi sulla stessa riga 
in base alla larghezza della pagina, quando non riesce più a gestire gli elementi li mette nella riga successiva*/
}

.box-nav{
    padding: 20px;
    grid-column: 1/4;
    background-color: lightsalmon;
}

.box-main{
    padding: 40px;
    grid-column: 1/3;
    background-color: lightsalmon;
}

.box-side{
    padding: 40px;
    background-color: lightsalmon;
}

.box-footer{
    padding: 20px;
    grid-column: 1/4;
    background-color: lightsalmon;
}